<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//sqlmap.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="TestTransaction">

    <resultMap id="testTransaction" type="TestTransaction">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="birth" column="birth"/>
    </resultMap>

    <sql id="selector">
        SELECT
        id,name,email,birth
        FROM test_transaction
    </sql>

    <sql id="where">
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="id != null">AND id = #{id}</if>
            <if test="name != null">AND name = #{name}</if>
            <if test="email != null">AND email = #{email}</if>
            <if test="birth != null">AND birth = #{birth}</if>
            <if test="birthStart != null">
                AND <![CDATA[ birth >= #{birthStart} ]]>
            </if>
            <if test="birthEnd != null">
                AND <![CDATA[ birth <= #{birthEnd} ]]>
            </if>
        </trim>
    </sql>

    <!-- 使用order by 字段要取消mybatis的预编译功能，会导致注入，需要用户把控输入输出 -->
    <sql id="orderBy">
        <trim prefix="ORDER BY">
            <if test="orderFields != null">
                <foreach item="item" collection="orderFields" separator=",">
                    ${item.orderBy} ${item.desc}
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="limit">
        <trim prefix=" LIMIT ">
            <if test="startRow != null">#{startRow},#{pageSize}</if>
        </trim>
    </sql>

    <insert id="insertTestTransaction" parameterType="testTransaction">
        INSERT INTO test_transaction
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null">name,</if>
            <if test="email != null">email,</if>
            <if test="birth != null">birth,</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="name != null">#{name},</if>
            <if test="email != null">#{email},</if>
            <if test="birth != null">#{birth},</if>
        </trim>
    </insert>
    <!--
    <insert id="batchInsertTestTransaction" parameterType="list">
        <foreach item="item" collection="list">
            INSERT INTO test_transaction
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="item.id != null">id,</if>
                <if test="item.name != null">name,</if>
                <if test="item.email != null">email,</if>
                <if test="item.birth != null">birth,</if>
            </trim>
            VALUES
            (
            <trim suffixOverrides=",">
                <if test="item.id != null">#{item.id},</if>
                <if test="item.name != null">#{item.name},</if>
                <if test="item.email != null">#{item.email},</if>
                <if test="item.birth != null">#{item.birth},</if>
            </trim>
            );
        </foreach>
    </insert>
    -->

    <update id="updateTestTransactionByKey" parameterType="testTransaction">
        UPDATE test_transaction
        <trim prefix="SET" prefixOverrides="," suffixOverrides=",">
            <if test="id != null">id = #{id},</if>
            <if test="name != null">name = #{name},</if>
            <if test="email != null">email = #{email},</if>
            <if test="birth != null">birth = #{birth},</if>
        </trim>
        WHERE
        [id] = #{[id]}
    </update>

    <!--
    <update id="batchUpdateTestTransaction" parameterType="list">
        <foreach collection="list" item="item" index="index" close=";" separator=";">
            UPDATE test_transaction
            <trim prefix="SET" prefixOverrides="," suffixOverrides=",">
                <if test="item.id != null">id = #{item.id},</if>
                <if test="item.name != null">name = #{item.name},</if>
                <if test="item.email != null">email = #{item.email},</if>
                <if test="item.birth != null">birth = #{item.birth},</if>
            </trim>
            WHERE [id] = #{item.[id]}
        </foreach>
    </update>
    -->

    <delete id="deleteTestTransactionByKey" parameterType="hashmap">
        DELETE FROM test_transaction
        WHERE
            str = #{str}
    </delete>

    <delete id="batchDeleteTestTransaction" parameterType="hashmap">
        DELETE FROM test_transaction WHERE [id] IN
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>

    <select id="getTestTransactionWithTestTransactionQuery" parameterType="testTransactionQuery"
            resultMap="testTransaction">
        <include refid="selector"/>
        <include refid="where"/>
        <include refid="orderBy"/>
    </select>

    <select id="getTestTransactionWithPage" parameterType="testTransactionQuery" resultMap="testTransaction">
        <include refid="selector"/>
        <include refid="where"/>
        <include refid="orderBy"/>
        <include refid="limit"/>
    </select>

    <select id="selectTestTransactionByKey" resultMap="testTransaction" parameterType="integer">
        <include refid="selector"/>
        WHERE id = #{key}
    </select>
</mapper>
